{"version":3,"file":"static/js/862.498eb3fd.chunk.js","mappings":"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","sources":["assets/icons/calendar52.svg","pages/Dashboard/components/Calendar/MyCalendar.tsx","pages/Dashboard/components/Seat/Seat.tsx","assets/icons/User24.svg","assets/icons/create.svg","assets/icons/NewPostcreate.svg","assets/icons/Dell.svg","assets/icons/Month.svg","pages/Dashboard/components/Time/Time.tsx","assets/icons/RESERVE.svg","pages/Dashboard/components/Reservation/Reservation.tsx","pages/Dashboard/DashboardPage.tsx"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCalendar52(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"calendar52\",\n    d: \"M19.5435 3.28015C19.4043 3.14532 19.237 3.03822 19.0518 2.96536C18.8666 2.89251 18.6674 2.85544 18.4663 2.85641H16.9231V1.78517C16.9267 1.55023 16.8783 1.31711 16.781 1.10019C16.6838 0.88327 16.5397 0.687151 16.3576 0.52393C16.1817 0.355141 15.9703 0.221592 15.7367 0.131516C15.503 0.0414393 15.2519 -0.00325616 14.999 0.000184582H14.2301C13.977 -0.00309463 13.7259 0.0417972 13.4922 0.132091C13.2585 0.222384 13.0473 0.356165 12.8714 0.52518C12.6893 0.688356 12.5452 0.884467 12.4479 1.1014C12.3506 1.31833 12.3023 1.55147 12.3059 1.78642V2.85766H7.68868V1.78517C7.69221 1.55023 7.64385 1.31711 7.54658 1.10019C7.44932 0.88327 7.3052 0.687151 7.12313 0.52393C6.94735 0.355296 6.73625 0.221837 6.50283 0.131765C6.26941 0.0416939 6.0186 -0.00308484 5.76584 0.000184582H4.99697C4.74389 -0.00309463 4.49277 0.0417972 4.25909 0.132091C4.02542 0.222384 3.81415 0.356165 3.63833 0.52518C3.45626 0.688401 3.31215 0.88452 3.21488 1.10144C3.11762 1.31836 3.06926 1.55148 3.07279 1.78642V2.85766H1.53371C1.33257 2.85669 1.13333 2.89376 0.948125 2.96661C0.762923 3.03947 0.595645 3.14657 0.456493 3.2814C0.31125 3.41058 0.19587 3.56586 0.117391 3.73779C0.0389115 3.90971 -0.00102361 4.09467 1.99361e-05 4.2814V18.57C0.00521209 18.9467 0.168258 19.3067 0.454577 19.5736C0.740895 19.8406 1.12797 19.9935 1.53371 20H18.4609C18.8673 19.9948 19.2556 19.8426 19.543 19.5758C19.8304 19.309 19.9944 18.9486 19.9999 18.5713V4.28515C20.0017 4.09758 19.9621 3.91167 19.8836 3.73884C19.8051 3.566 19.6894 3.40991 19.5435 3.28015ZM5.00101 18.57H1.53371V15.3563H4.99563L5.00101 18.57ZM5.00101 14.6413H1.53371V11.0701H4.99563L5.00101 14.6413ZM5.00101 10.3551H1.53371V7.14137H4.99563L5.00101 10.3551ZM4.73171 5.24889C4.69527 5.21666 4.66632 5.17786 4.64664 5.13487C4.62696 5.09188 4.61696 5.0456 4.61725 4.99889V1.78517C4.61865 1.69076 4.65967 1.60058 4.73159 1.53381C4.80351 1.46704 4.90065 1.42897 5.00236 1.42767H5.76584C5.86754 1.42897 5.96469 1.46704 6.03661 1.53381C6.10853 1.60058 6.14955 1.69076 6.15094 1.78517V5.00014C6.14955 5.09455 6.10853 5.18473 6.03661 5.2515C5.96469 5.31826 5.86754 5.35634 5.76584 5.35764H4.99697C4.94611 5.35802 4.89571 5.34867 4.84892 5.33018C4.80212 5.31168 4.75993 5.28443 4.72498 5.25014L4.73171 5.24889ZM9.61824 18.5688H5.76584V15.3563H9.61285L9.61824 18.5688ZM9.61824 14.6401H5.76584V11.0701H9.61285L9.61824 14.6401ZM9.61824 10.3538H5.76584V7.14137H9.61285L9.61824 10.3538ZM14.2355 18.5675H10.3817V15.3563H14.2287L14.2355 18.5675ZM14.2355 14.6388H10.3817V11.0701H14.2287L14.2355 14.6388ZM14.2355 10.3526H10.3817V7.14137H14.2287L14.2355 10.3526ZM13.9662 5.24639C13.9291 5.21509 13.8992 5.17713 13.8784 5.1348C13.8575 5.09248 13.8462 5.04666 13.845 5.00014V1.78517C13.846 1.69066 13.8869 1.60029 13.9589 1.53346C14.0309 1.46663 14.1283 1.42865 14.2301 1.42767H14.999C15.1008 1.42865 15.1981 1.46663 15.2701 1.53346C15.3421 1.60029 15.383 1.69066 15.3841 1.78517V5.00014C15.383 5.09465 15.3421 5.18502 15.2701 5.25185C15.1981 5.31868 15.1008 5.35666 14.999 5.35764H14.2301C14.1792 5.35809 14.1288 5.34878 14.082 5.33028C14.0352 5.31178 13.993 5.28449 13.9581 5.25014L13.9662 5.24639ZM18.4689 18.5663H14.999V15.3563H18.4609L18.4689 18.5663ZM18.4689 14.6376H14.999V11.0701H18.4609L18.4689 14.6376ZM18.4689 10.3513H14.999V7.14137H18.4609L18.4689 10.3513Z\",\n    fill: \"#333333\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCalendar52);\nexport default __webpack_public_path__ + \"static/media/calendar52.c4b1f4a5452ffb9d0c02afe84449c7af.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport { format } from \"date-fns\";\nimport enLocale from \"date-fns/locale/en-US\";\nimport calendar from \"../../../../assets/icons/calendar52.svg\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\nimport { Modal } from \"@mui/material\";\n\ninterface MyCalendarProps {\n  customClassName: string;\n  dateTextClassName?: string;\n  calendarImageClassName?: string;\n  dateFormat?: string;\n}\n\nconst MyCalendar: React.FC<MyCalendarProps> = ({\n  customClassName,\n  dateTextClassName,\n  calendarImageClassName,\n  dateFormat = \"eee dd/MM\",\n}) => {\n  const [currentDate, setCurrentDate] = useState<Date>(new Date());\n  const [open, setOpen] = useState<boolean>(false);\n\n  const formattedDate = format(currentDate, dateFormat, {\n    locale: enLocale,\n  });\n\n  return (\n    <>\n      <div\n        className={`calendar cursor-pointer ${customClassName}`}\n        onClick={() => setOpen(true)}\n      >\n        <div className=\"flex\">\n          <img\n            className={`w-[20px] h-[20px] ml-[34px] mt-[15px] ${\n              calendarImageClassName || \"\"\n            }`}\n            src={calendar}\n            alt=\"calendar\"\n          />\n          <div\n            className={`calendar-cell cursor-pointer flex ml-[8px] mt-[15px] bg-[#E0E0E0] w-[113px] h-[15px] font-semibold whitespace-no-wrap \n            ${dateTextClassName || \"\"}`}\n            style={{ fontWeight: \"bold\", whiteSpace: \"nowrap\" }}\n          >\n            {formattedDate}\n          </div>\n        </div>\n      </div>\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        BackdropProps={{\n          style: {\n            backgroundColor: \"rgba(0, 0, 0, 0)\", // Устанавливаем полностью прозрачный фон\n          },\n        }}\n      >\n        <div className=\"bg-white w-[350px] h-[350px] ml-[250px] mt-[190px] border-blue-500 border-[3px]\">\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <DateCalendar onChange={(e: any) => setCurrentDate(e?.$d)} />\n          </LocalizationProvider>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default MyCalendar;\n","import React from \"react\";\n\ninterface SeatProps {\n  numberOfSeats: number;\n  // Другие пропсы, если необходимо\n}\n\nconst Seat: React.FC<SeatProps> = ({ numberOfSeats }) => {\n  return (\n    <div className=\"w-[45px] h-[29px] ml-[71px] mt-[11px] flex-shrink-0 text-black font-roboto text-[30px] font-normal\">\n      {numberOfSeats}\n    </div>\n  );\n};\n\nexport default Seat;\n","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUser24(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"User_add_alt_fill\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Ellipse 46\",\n    cx: 10,\n    cy: 8,\n    r: 5,\n    fill: \"#D449EB\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 52\",\n    d: \"M19 10L19 16\",\n    stroke: \"#D449EB\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 53\",\n    d: \"M22 13L16 13\",\n    stroke: \"#D449EB\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Ellipse 47\",\n    d: \"M17.1421 20.3825C17.6038 20.278 17.8806 19.7981 17.676 19.3713C17.1242 18.2203 16.2173 17.2088 15.0419 16.4465C13.5955 15.5085 11.8232 15 10 15C8.17681 15 6.40455 15.5085 4.95811 16.4465C3.78266 17.2088 2.87577 18.2202 2.32396 19.3713C2.11935 19.7981 2.39623 20.278 2.85786 20.3825C7.55976 21.4474 12.4402 21.4474 17.1421 20.3825Z\",\n    fill: \"#D449EB\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUser24);\nexport default __webpack_public_path__ + \"static/media/User24.608bfa7d9c71b434cb3a4531a82a0b2c.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCreate(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"fi:plus-circle\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M12 8V16\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_3\",\n    d: \"M8 12H16\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCreate);\nexport default __webpack_public_path__ + \"static/media/create.b401a1abb317f753481d21097462fbcf.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgNewPostcreate(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 83,\n    height: 17,\n    viewBox: \"0 0 83 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.40944 16.788C5.96944 16.788 4.70544 16.484 3.61744 15.876C2.52944 15.268 1.68944 14.412 1.09744 13.308C0.521438 12.188 0.233438 10.876 0.233438 9.372C0.233438 7.772 0.593438 6.332 1.31344 5.052C2.03344 3.756 3.02544 2.748 4.28944 2.028C5.56944 1.292 7.00944 0.923999 8.60944 0.923999C9.20144 0.923999 9.80144 0.971999 10.4094 1.068C11.0334 1.148 11.5534 1.236 11.9694 1.332C12.4014 1.412 12.6734 1.468 12.7854 1.5L12.8814 1.644C12.8494 1.74 12.7934 1.972 12.7134 2.34C12.6494 2.708 12.5694 3.188 12.4734 3.78C12.3934 4.372 12.3294 4.996 12.2814 5.652L11.1294 5.748C11.1454 5.668 11.1614 5.524 11.1774 5.316C11.1934 5.092 11.2014 4.844 11.2014 4.572C11.2014 3.084 10.0254 2.34 7.67344 2.34C6.61744 2.34 5.68944 2.596 4.88944 3.108C4.08944 3.62 3.47344 4.348 3.04144 5.292C2.60944 6.22 2.39344 7.316 2.39344 8.58C2.39344 9.972 2.61744 11.196 3.06544 12.252C3.52944 13.308 4.17744 14.132 5.00944 14.724C5.84144 15.3 6.80144 15.588 7.88944 15.588C8.97744 15.588 9.84944 15.284 10.5054 14.676C11.1774 14.052 11.6654 13.092 11.9694 11.796L13.1214 11.7C13.0734 11.94 12.9694 12.476 12.8094 13.308C12.6494 14.124 12.5374 14.892 12.4734 15.612L12.3294 15.828C12.3294 15.844 12.0814 15.94 11.5854 16.116C11.1054 16.276 10.4974 16.428 9.76144 16.572C9.04144 16.716 8.25744 16.788 7.40944 16.788ZM26.5849 16.884C26.1849 16.884 25.7529 16.684 25.2889 16.284C24.8409 15.868 24.4249 15.308 24.0409 14.604L21.4729 9.948H19.4809L19.4089 13.524C19.4089 14.132 19.4489 14.572 19.5289 14.844C19.6089 15.1 19.7609 15.276 19.9849 15.372C20.2089 15.452 20.5929 15.492 21.1369 15.492L21.1849 15.588L20.9689 16.596C20.7769 16.58 20.3929 16.564 19.8169 16.548C19.2409 16.532 18.6409 16.524 18.0169 16.524C17.4569 16.524 16.9609 16.532 16.5289 16.548C16.0969 16.564 15.8089 16.58 15.6649 16.596L15.8809 15.516C16.3929 15.452 16.7769 15.364 17.0329 15.252C17.2889 15.14 17.4649 14.964 17.5609 14.724C17.6569 14.468 17.7049 14.1 17.7049 13.62L17.7289 3.54C17.7289 3.028 17.6649 2.684 17.5369 2.508C17.4249 2.332 17.1929 2.244 16.8409 2.244C16.6809 2.244 16.5209 2.252 16.3609 2.268C16.2009 2.284 16.0889 2.292 16.0249 2.292L15.9769 2.196L16.1449 1.14C16.3369 1.156 16.6969 1.172 17.2249 1.188C17.7529 1.204 18.2809 1.212 18.8089 1.212C19.3529 1.212 19.9209 1.204 20.5129 1.188C21.1209 1.156 21.5369 1.132 21.7609 1.116C23.2489 1.116 24.4249 1.452 25.2889 2.124C26.1529 2.796 26.5849 3.716 26.5849 4.884C26.5849 5.844 26.2729 6.724 25.6489 7.524C25.0409 8.324 24.1769 8.98 23.0569 9.492L25.6969 13.668C26.1609 14.436 26.6089 14.972 27.0409 15.276C27.4889 15.564 28.0329 15.708 28.6729 15.708L28.7689 15.804L28.6249 16.62L26.5849 16.884ZM22.0009 8.844C22.0009 8.892 22.2409 8.788 22.7209 8.532C23.2009 8.276 23.6329 7.884 24.0169 7.356C24.4009 6.828 24.5929 6.148 24.5929 5.316C24.5929 3.204 23.1289 2.148 20.2009 2.148C20.0409 2.148 19.9289 2.188 19.8649 2.268C19.8169 2.332 19.7849 2.476 19.7689 2.7C19.6249 5.148 19.5449 7.116 19.5289 8.604L22.0009 8.844ZM41.7368 12.492C41.4648 13.788 41.2488 15.132 41.0887 16.524L40.9688 16.668C37.6088 16.556 35.1848 16.5 33.6968 16.5C32.5128 16.5 31.4008 16.58 30.3608 16.74L30.5048 15.636C31.2248 15.54 31.7128 15.356 31.9688 15.084C32.2408 14.796 32.3768 14.308 32.3768 13.62L32.4008 3.54C32.4008 3.028 32.3368 2.684 32.2088 2.508C32.0968 2.332 31.8648 2.244 31.5128 2.244L30.6968 2.292L30.6488 2.196L30.8168 1.14C32.4488 1.188 33.5608 1.212 34.1528 1.212C36.0568 1.212 37.5368 1.196 38.5928 1.164C39.6488 1.116 40.5688 1.036 41.3528 0.923999L41.4248 1.068C41.1368 2.332 40.9528 3.66 40.8728 5.052L39.7208 5.148L39.7688 4.116C39.7688 3.556 39.6968 3.172 39.5528 2.964C39.4088 2.74 39.0968 2.596 38.6168 2.532C38.1368 2.452 37.2968 2.412 36.0968 2.412C35.5368 2.412 35.1528 2.428 34.9448 2.46C34.7368 2.492 34.6008 2.572 34.5368 2.7C34.4728 2.812 34.4328 3.028 34.4168 3.348L34.2248 8.004L36.6968 8.028C37.3208 8.028 38.2968 7.94 39.6248 7.764L39.7208 7.884L39.3848 9.3C37.6088 9.252 36.4888 9.228 36.0247 9.228C35.4968 9.228 34.8808 9.284 34.1768 9.396L34.0808 13.98C34.0808 14.444 34.1208 14.772 34.2008 14.964C34.2808 15.14 34.4408 15.26 34.6808 15.324C34.9368 15.388 35.3688 15.42 35.9768 15.42C37.3208 15.42 38.2728 15.356 38.8328 15.228C39.4088 15.1 39.8168 14.844 40.0568 14.46C40.2968 14.076 40.4808 13.42 40.6088 12.492L41.6648 12.372L41.7368 12.492ZM51.0444 16.572L51.1404 15.636C51.9564 15.572 52.5164 15.476 52.8204 15.348C53.1244 15.22 53.2764 15.012 53.2764 14.724C53.2764 14.404 53.2044 14.02 53.0604 13.572L52.2684 10.956C51.8844 10.94 51.0524 10.932 49.7724 10.932C49.0044 10.932 48.1324 10.996 47.1564 11.124L46.2684 13.62C46.1244 14.052 46.0524 14.364 46.0524 14.556C46.0524 14.908 46.1644 15.164 46.3884 15.324C46.6124 15.468 46.9804 15.54 47.4924 15.54H48.8604L48.9084 15.636L48.7644 16.668C48.5724 16.652 48.1324 16.62 47.4444 16.572C46.7564 16.524 46.0844 16.5 45.4284 16.5C44.8364 16.5 44.2844 16.508 43.7724 16.524C43.2764 16.54 42.9484 16.556 42.7884 16.572L42.9804 15.444C43.4284 15.396 43.7884 15.244 44.0604 14.988C44.3324 14.716 44.5964 14.252 44.8524 13.596L49.5324 1.332L51.0444 0.923999H51.2364C51.3324 1.308 51.5724 2.196 51.9564 3.588C52.3564 4.98 52.8364 6.628 53.3964 8.532C53.9724 10.436 54.5244 12.188 55.0524 13.788C55.2444 14.38 55.5004 14.796 55.8204 15.036C56.1404 15.276 56.6524 15.428 57.3564 15.492L57.4044 15.588L57.2364 16.572C57.0444 16.572 56.6924 16.556 56.1804 16.524C55.6844 16.508 55.1884 16.5 54.6924 16.5C53.9244 16.5 53.1804 16.532 52.4604 16.596C51.7564 16.66 51.3084 16.708 51.1164 16.74L51.0444 16.572ZM49.7004 9.948C50.2764 9.948 51.0204 9.908 51.9324 9.828L50.0364 3.54H49.8684L47.5884 9.948H49.7004ZM59.7467 15.564C60.5467 15.5 61.0987 15.404 61.4027 15.276C61.7067 15.132 61.9067 14.884 62.0027 14.532C62.0987 14.164 62.1467 13.524 62.1467 12.612V2.148C60.7867 2.196 59.8587 2.276 59.3627 2.388C58.8827 2.484 58.5547 2.716 58.3787 3.084C58.2027 3.436 58.0427 4.132 57.8987 5.172L56.7707 5.268C56.9627 3.748 57.0827 2.364 57.1307 1.116L57.3467 0.923999L59.3387 1.188H66.7787L68.8187 0.923999L69.0347 1.116C69.0827 2.428 69.2027 3.78 69.3947 5.172L68.2667 5.268C68.0907 4.212 67.9147 3.5 67.7387 3.132C67.5627 2.764 67.2507 2.524 66.8027 2.412C66.3547 2.3 65.4907 2.212 64.2107 2.148C64.1147 3.108 64.0267 4.804 63.9467 7.236C63.8667 9.668 63.8267 11.86 63.8267 13.812C63.8267 14.404 63.9307 14.828 64.1387 15.084C64.3467 15.324 64.6987 15.444 65.1947 15.444C65.6747 15.444 66.1147 15.42 66.5147 15.372L66.5867 15.468L66.3707 16.572L65.5787 16.548L62.8427 16.5C61.9627 16.5 60.8667 16.532 59.5547 16.596L59.7467 15.564ZM82.4243 12.492C82.1523 13.788 81.9363 15.132 81.7762 16.524L81.6562 16.668C78.2963 16.556 75.8723 16.5 74.3843 16.5C73.2003 16.5 72.0883 16.58 71.0483 16.74L71.1923 15.636C71.9123 15.54 72.4003 15.356 72.6562 15.084C72.9283 14.796 73.0643 14.308 73.0643 13.62L73.0883 3.54C73.0883 3.028 73.0243 2.684 72.8963 2.508C72.7843 2.332 72.5523 2.244 72.2003 2.244L71.3843 2.292L71.3363 2.196L71.5043 1.14C73.1363 1.188 74.2483 1.212 74.8403 1.212C76.7443 1.212 78.2243 1.196 79.2803 1.164C80.3363 1.116 81.2563 1.036 82.0403 0.923999L82.1123 1.068C81.8243 2.332 81.6403 3.66 81.5603 5.052L80.4083 5.148L80.4563 4.116C80.4563 3.556 80.3843 3.172 80.2403 2.964C80.0963 2.74 79.7843 2.596 79.3043 2.532C78.8243 2.452 77.9843 2.412 76.7843 2.412C76.2243 2.412 75.8403 2.428 75.6323 2.46C75.4243 2.492 75.2883 2.572 75.2243 2.7C75.1603 2.812 75.1203 3.028 75.1043 3.348L74.9123 8.004L77.3843 8.028C78.0083 8.028 78.9843 7.94 80.3123 7.764L80.4083 7.884L80.0723 9.3C78.2963 9.252 77.1763 9.228 76.7122 9.228C76.1843 9.228 75.5683 9.284 74.8643 9.396L74.7683 13.98C74.7683 14.444 74.8083 14.772 74.8883 14.964C74.9683 15.14 75.1283 15.26 75.3683 15.324C75.6243 15.388 76.0563 15.42 76.6643 15.42C78.0083 15.42 78.9603 15.356 79.5203 15.228C80.0963 15.1 80.5043 14.844 80.7443 14.46C80.9843 14.076 81.1683 13.42 81.2963 12.492L82.3523 12.372L82.4243 12.492Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNewPostcreate);\nexport default __webpack_public_path__ + \"static/media/NewPostcreate.69a55fa15156bb0822cb863de6c984bd.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgDell(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 42,\n    height: 42,\n    viewBox: \"0 0 42 42\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Dell\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Ellipse 47\",\n    cx: 21,\n    cy: 21,\n    r: 15.75,\n    stroke: \"#1473E6\",\n    strokeWidth: 2\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 8\",\n    d: \"M15.7501 26.2494L26.2501 15.7494\",\n    stroke: \"#1473E6\",\n    strokeWidth: 2\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 9\",\n    d: \"M26.25 26.25L15.75 15.75\",\n    stroke: \"#1473E6\",\n    strokeWidth: 2\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDell);\nexport default __webpack_public_path__ + \"static/media/Dell.b138cc1c842ba6146508746f9d468dc7.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgMonth(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 195,\n    height: 17,\n    viewBox: \"0 0 195 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.954 10.634H2.934L1.422 14H0.036L5.796 1.4H7.11L12.87 14H11.466L9.954 10.634ZM9.468 9.554L6.444 2.786L3.42 9.554H9.468ZM25.4843 1.4V14H24.3863L16.2863 3.776V14H14.9543V1.4H16.0523L24.1703 11.624V1.4H25.4843ZM42.2459 7.502C43.0739 7.682 43.7099 8.042 44.1539 8.582C44.6099 9.11 44.8379 9.794 44.8379 10.634C44.8379 11.714 44.4359 12.548 43.6319 13.136C42.8399 13.712 41.6639 14 40.1039 14H34.3079V1.4H39.7439C41.1479 1.4 42.2339 1.682 43.0019 2.246C43.7819 2.81 44.1719 3.608 44.1719 4.64C44.1719 5.336 43.9979 5.93 43.6499 6.422C43.3139 6.902 42.8459 7.262 42.2459 7.502ZM35.6399 2.498V7.07H39.6539C40.6739 7.07 41.4599 6.878 42.0119 6.494C42.5639 6.098 42.8399 5.528 42.8399 4.784C42.8399 4.04 42.5639 3.476 42.0119 3.092C41.4599 2.696 40.6739 2.498 39.6539 2.498H35.6399ZM40.0859 12.902C41.2139 12.902 42.0659 12.71 42.6419 12.326C43.2179 11.942 43.5059 11.342 43.5059 10.526C43.5059 8.954 42.3659 8.168 40.0859 8.168H35.6399V12.902H40.0859ZM55.8162 7.502C56.6442 7.682 57.2802 8.042 57.7242 8.582C58.1802 9.11 58.4082 9.794 58.4082 10.634C58.4082 11.714 58.0062 12.548 57.2022 13.136C56.4102 13.712 55.2342 14 53.6742 14H47.8782V1.4H53.3142C54.7182 1.4 55.8042 1.682 56.5722 2.246C57.3522 2.81 57.7422 3.608 57.7422 4.64C57.7422 5.336 57.5682 5.93 57.2202 6.422C56.8842 6.902 56.4162 7.262 55.8162 7.502ZM49.2102 2.498V7.07H53.2242C54.2442 7.07 55.0302 6.878 55.5822 6.494C56.1342 6.098 56.4102 5.528 56.4102 4.784C56.4102 4.04 56.1342 3.476 55.5822 3.092C55.0302 2.696 54.2442 2.498 53.2242 2.498H49.2102ZM53.6562 12.902C54.7842 12.902 55.6362 12.71 56.2122 12.326C56.7882 11.942 57.0762 11.342 57.0762 10.526C57.0762 8.954 55.9362 8.168 53.6562 8.168H49.2102V12.902H53.6562ZM74.1385 15.062C73.7545 15.53 73.2985 15.884 72.7705 16.124C72.2545 16.376 71.6905 16.502 71.0785 16.502C70.3345 16.502 69.6265 16.316 68.9545 15.944C68.2945 15.584 67.5505 14.972 66.7225 14.108C65.5105 14.072 64.4185 13.772 63.4465 13.208C62.4745 12.644 61.7125 11.882 61.1605 10.922C60.6085 9.962 60.3325 8.888 60.3325 7.7C60.3325 6.488 60.6145 5.396 61.1785 4.424C61.7545 3.452 62.5465 2.69 63.5545 2.138C64.5745 1.574 65.7085 1.292 66.9565 1.292C68.2045 1.292 69.3265 1.568 70.3225 2.12C71.3305 2.672 72.1225 3.44 72.6985 4.424C73.2745 5.396 73.5625 6.488 73.5625 7.7C73.5625 8.756 73.3405 9.728 72.8965 10.616C72.4645 11.492 71.8525 12.224 71.0605 12.812C70.2805 13.4 69.3805 13.79 68.3605 13.982C69.2845 14.954 70.1965 15.44 71.0965 15.44C72.0325 15.44 72.8305 15.056 73.4905 14.288L74.1385 15.062ZM61.6465 7.7C61.6465 8.684 61.8745 9.572 62.3305 10.364C62.7985 11.156 63.4345 11.78 64.2385 12.236C65.0545 12.692 65.9605 12.92 66.9565 12.92C67.9525 12.92 68.8525 12.692 69.6565 12.236C70.4605 11.78 71.0905 11.156 71.5465 10.364C72.0025 9.572 72.2305 8.684 72.2305 7.7C72.2305 6.716 72.0025 5.828 71.5465 5.036C71.0905 4.244 70.4605 3.62 69.6565 3.164C68.8525 2.708 67.9525 2.48 66.9565 2.48C65.9605 2.48 65.0545 2.708 64.2385 3.164C63.4345 3.62 62.7985 4.244 62.3305 5.036C61.8745 5.828 61.6465 6.716 61.6465 7.7ZM84.733 14.108C83.797 14.108 82.897 13.958 82.033 13.658C81.181 13.358 80.521 12.962 80.053 12.47L80.575 11.444C81.031 11.9 81.637 12.272 82.393 12.56C83.149 12.836 83.929 12.974 84.733 12.974C85.861 12.974 86.707 12.77 87.271 12.362C87.835 11.942 88.117 11.402 88.117 10.742C88.117 10.238 87.961 9.836 87.649 9.536C87.349 9.236 86.977 9.008 86.533 8.852C86.089 8.684 85.471 8.504 84.679 8.312C83.731 8.072 82.975 7.844 82.411 7.628C81.847 7.4 81.361 7.058 80.953 6.602C80.557 6.146 80.359 5.528 80.359 4.748C80.359 4.112 80.527 3.536 80.863 3.02C81.199 2.492 81.715 2.072 82.411 1.76C83.107 1.448 83.971 1.292 85.003 1.292C85.723 1.292 86.425 1.394 87.109 1.598C87.805 1.79 88.405 2.06 88.909 2.408L88.459 3.47C87.931 3.122 87.367 2.864 86.767 2.696C86.167 2.516 85.579 2.426 85.003 2.426C83.899 2.426 83.065 2.642 82.501 3.074C81.949 3.494 81.673 4.04 81.673 4.712C81.673 5.216 81.823 5.624 82.123 5.936C82.435 6.236 82.819 6.47 83.275 6.638C83.743 6.794 84.367 6.968 85.147 7.16C86.071 7.388 86.815 7.616 87.379 7.844C87.955 8.06 88.441 8.396 88.837 8.852C89.233 9.296 89.431 9.902 89.431 10.67C89.431 11.306 89.257 11.888 88.909 12.416C88.573 12.932 88.051 13.346 87.343 13.658C86.635 13.958 85.765 14.108 84.733 14.108ZM100.595 4.532V14H99.3712V12.272C99.0353 12.848 98.5733 13.298 97.9853 13.622C97.3973 13.934 96.7253 14.09 95.9693 14.09C94.7333 14.09 93.7553 13.748 93.0353 13.064C92.3273 12.368 91.9733 11.354 91.9733 10.022V4.532H93.2513V9.896C93.2513 10.892 93.4973 11.648 93.9893 12.164C94.4813 12.68 95.1833 12.938 96.0953 12.938C97.0913 12.938 97.8773 12.638 98.4533 12.038C99.0293 11.426 99.3173 10.58 99.3173 9.5V4.532H100.595ZM119.632 1.4L114.052 14H112.738L107.158 1.4H108.598L113.422 12.344L118.282 1.4H119.632ZM123.782 4.46C125.018 4.46 125.966 4.772 126.626 5.396C127.286 6.008 127.616 6.92 127.616 8.132V14H126.392V12.524C126.104 13.016 125.678 13.4 125.114 13.676C124.562 13.952 123.902 14.09 123.134 14.09C122.078 14.09 121.238 13.838 120.614 13.334C119.99 12.83 119.678 12.164 119.678 11.336C119.678 10.532 119.966 9.884 120.542 9.392C121.13 8.9 122.06 8.654 123.332 8.654H126.338V8.078C126.338 7.262 126.11 6.644 125.654 6.224C125.198 5.792 124.532 5.576 123.656 5.576C123.056 5.576 122.48 5.678 121.928 5.882C121.376 6.074 120.902 6.344 120.506 6.692L119.93 5.738C120.41 5.33 120.986 5.018 121.658 4.802C122.33 4.574 123.038 4.46 123.782 4.46ZM123.332 13.082C124.052 13.082 124.67 12.92 125.186 12.596C125.702 12.26 126.086 11.78 126.338 11.156V9.608H123.368C121.748 9.608 120.938 10.172 120.938 11.3C120.938 11.852 121.148 12.29 121.568 12.614C121.988 12.926 122.576 13.082 123.332 13.082ZM135.911 4.46C137.099 4.46 138.041 4.808 138.737 5.504C139.445 6.188 139.799 7.19 139.799 8.51V14H138.521V8.636C138.521 7.652 138.275 6.902 137.783 6.386C137.291 5.87 136.589 5.612 135.677 5.612C134.657 5.612 133.847 5.918 133.247 6.53C132.659 7.13 132.365 7.964 132.365 9.032V14H131.087V4.532H132.311V6.278C132.659 5.702 133.139 5.258 133.751 4.946C134.375 4.622 135.095 4.46 135.911 4.46ZM158.779 1.4V14H157.465V8.186H149.581V14H148.249V1.4H149.581V7.016H157.465V1.4H158.779ZM165.934 4.46C167.17 4.46 168.118 4.772 168.778 5.396C169.438 6.008 169.768 6.92 169.768 8.132V14H168.544V12.524C168.256 13.016 167.83 13.4 167.266 13.676C166.714 13.952 166.054 14.09 165.286 14.09C164.23 14.09 163.39 13.838 162.766 13.334C162.142 12.83 161.83 12.164 161.83 11.336C161.83 10.532 162.118 9.884 162.694 9.392C163.282 8.9 164.212 8.654 165.484 8.654H168.49V8.078C168.49 7.262 168.262 6.644 167.806 6.224C167.35 5.792 166.684 5.576 165.808 5.576C165.208 5.576 164.632 5.678 164.08 5.882C163.528 6.074 163.054 6.344 162.658 6.692L162.082 5.738C162.562 5.33 163.138 5.018 163.81 4.802C164.482 4.574 165.19 4.46 165.934 4.46ZM165.484 13.082C166.204 13.082 166.822 12.92 167.338 12.596C167.854 12.26 168.238 11.78 168.49 11.156V9.608H165.52C163.9 9.608 163.09 10.172 163.09 11.3C163.09 11.852 163.3 12.29 163.72 12.614C164.14 12.926 164.728 13.082 165.484 13.082ZM178.063 4.46C179.251 4.46 180.193 4.808 180.889 5.504C181.597 6.188 181.951 7.19 181.951 8.51V14H180.673V8.636C180.673 7.652 180.427 6.902 179.935 6.386C179.443 5.87 178.741 5.612 177.829 5.612C176.809 5.612 175.999 5.918 175.399 6.53C174.811 7.13 174.517 7.964 174.517 9.032V14H173.239V4.532H174.463V6.278C174.811 5.702 175.291 5.258 175.903 4.946C176.527 4.622 177.247 4.46 178.063 4.46ZM190.245 4.46C191.433 4.46 192.375 4.808 193.071 5.504C193.779 6.188 194.133 7.19 194.133 8.51V14H192.855V8.636C192.855 7.652 192.609 6.902 192.117 6.386C191.625 5.87 190.923 5.612 190.011 5.612C188.991 5.612 188.181 5.918 187.581 6.53C186.993 7.13 186.699 7.964 186.699 9.032V14H185.421V0.643999H186.699V6.188C187.047 5.636 187.527 5.21 188.139 4.91C188.751 4.61 189.453 4.46 190.245 4.46Z\",\n    fill: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMonth);\nexport default __webpack_public_path__ + \"static/media/Month.86713a817a22b1bc4571c4c35b763cfe.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\n\nconst TimePicker = () => {\n  const [startHour, setStartHour] = useState(\"\");\n  const [startMinute, setStartMinute] = useState(\"\");\n  const [endHour, setEndHour] = useState(\"\");\n  const [endMinute, setEndMinute] = useState(\"\");\n  const [ampm, setAmPm] = useState(\"AM\");\n\n  const handleStartHourChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setStartHour(e.target.value);\n  };\n\n  const handleStartMinuteChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setStartMinute(e.target.value);\n  };\n\n  const handleEndHourChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEndHour(e.target.value);\n  };\n\n  const handleEndMinuteChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEndMinute(e.target.value);\n  };\n\n  const handleAmPmChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setAmPm(e.target.value);\n  };\n\n  return (\n    <div className=\"flex ml-[23px] mt-[6px]\">\n      <input\n        type=\"text\"\n        className=\"w-6 text-center border-none text-[18px]\"\n        placeholder=\"HH\"\n        value={startHour}\n        onChange={handleStartHourChange}\n      />\n      <span className=\"text-center\">:</span>\n      <input\n        type=\"text\"\n        className=\"w-6 text-center border-none text-[18px]\"\n        placeholder=\"MM\"\n        value={startMinute}\n        onChange={handleStartMinuteChange}\n      />\n      <span className=\"mx-2 text-center\">-</span>\n      <input\n        type=\"text\"\n        className=\"w-6 text-center border-none  text-[18px]\"\n        placeholder=\"HH\"\n        value={endHour}\n        onChange={handleEndHourChange}\n      />\n      <span className=\"text-center\">:</span>\n      <input\n        type=\"text\"\n        className=\"w-6 text-center border-none text-[18px]\"\n        placeholder=\"MM\"\n        value={endMinute}\n        onChange={handleEndMinuteChange}\n      />\n      <select\n        className=\"w-40 text-[18px] mr-5\"\n        value={ampm}\n        onChange={handleAmPmChange}\n        style={{ marginRight: \"40px\" }}\n      >\n        <option value=\"AM\">AM</option>\n        <option value=\"PM\">PM</option>\n      </select>\n    </div>\n  );\n};\n\nexport default TimePicker;\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgReserve(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 97,\n    height: 17,\n    viewBox: \"0 0 97 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.6239 16.384C11.2239 16.384 10.7919 16.184 10.3279 15.784C9.87994 15.368 9.46394 14.808 9.07994 14.104L6.51194 9.448H4.51994L4.44794 13.024C4.44794 13.632 4.48794 14.072 4.56794 14.344C4.64794 14.6 4.79994 14.776 5.02394 14.872C5.24794 14.952 5.63194 14.992 6.17594 14.992L6.22394 15.088L6.00794 16.096C5.81594 16.08 5.43194 16.064 4.85594 16.048C4.27994 16.032 3.67994 16.024 3.05594 16.024C2.49594 16.024 1.99994 16.032 1.56794 16.048C1.13594 16.064 0.847938 16.08 0.703938 16.096L0.919937 15.016C1.43194 14.952 1.81594 14.864 2.07194 14.752C2.32794 14.64 2.50394 14.464 2.59994 14.224C2.69594 13.968 2.74394 13.6 2.74394 13.12L2.76794 3.04C2.76794 2.528 2.70394 2.184 2.57594 2.008C2.46394 1.832 2.23194 1.744 1.87994 1.744C1.71994 1.744 1.55994 1.752 1.39994 1.768C1.23994 1.784 1.12794 1.792 1.06394 1.792L1.01594 1.696L1.18394 0.639999C1.37594 0.655999 1.73594 0.671999 2.26394 0.688C2.79194 0.704 3.31994 0.711999 3.84794 0.711999C4.39194 0.711999 4.95994 0.704 5.55194 0.688C6.15994 0.655999 6.57594 0.631999 6.79994 0.615999C8.28794 0.615999 9.46394 0.951999 10.3279 1.624C11.1919 2.296 11.6239 3.216 11.6239 4.384C11.6239 5.344 11.3119 6.224 10.6879 7.024C10.0799 7.824 9.21594 8.48 8.09594 8.992L10.7359 13.168C11.1999 13.936 11.6479 14.472 12.0799 14.776C12.5279 15.064 13.0719 15.208 13.7119 15.208L13.8079 15.304L13.6639 16.12L11.6239 16.384ZM7.03994 8.344C7.03994 8.392 7.27994 8.288 7.75994 8.032C8.23994 7.776 8.67194 7.384 9.05594 6.856C9.43994 6.328 9.63194 5.648 9.63194 4.816C9.63194 2.704 8.16794 1.648 5.23994 1.648C5.07994 1.648 4.96794 1.688 4.90394 1.768C4.85594 1.832 4.82394 1.976 4.80794 2.2C4.66394 4.648 4.58394 6.616 4.56794 8.104L7.03994 8.344ZM26.7758 11.992C26.5038 13.288 26.2878 14.632 26.1278 16.024L26.0078 16.168C22.6478 16.056 20.2238 16 18.7358 16C17.5518 16 16.4398 16.08 15.3998 16.24L15.5438 15.136C16.2638 15.04 16.7518 14.856 17.0078 14.584C17.2798 14.296 17.4158 13.808 17.4158 13.12L17.4398 3.04C17.4398 2.528 17.3758 2.184 17.2478 2.008C17.1358 1.832 16.9038 1.744 16.5518 1.744L15.7358 1.792L15.6878 1.696L15.8558 0.639999C17.4878 0.687999 18.5998 0.711999 19.1918 0.711999C21.0958 0.711999 22.5758 0.695999 23.6318 0.663999C24.6878 0.615999 25.6078 0.535999 26.3918 0.423999L26.4638 0.568C26.1758 1.832 25.9918 3.16 25.9118 4.552L24.7598 4.648L24.8078 3.616C24.8078 3.056 24.7358 2.672 24.5918 2.464C24.4478 2.24 24.1358 2.096 23.6558 2.032C23.1758 1.952 22.3358 1.912 21.1358 1.912C20.5758 1.912 20.1918 1.928 19.9838 1.96C19.7758 1.992 19.6398 2.072 19.5758 2.2C19.5118 2.312 19.4718 2.528 19.4558 2.848L19.2638 7.504L21.7358 7.528C22.3598 7.528 23.3358 7.44 24.6638 7.264L24.7598 7.384L24.4238 8.8C22.6478 8.752 21.5278 8.728 21.0638 8.728C20.5358 8.728 19.9198 8.784 19.2158 8.896L19.1198 13.48C19.1198 13.944 19.1598 14.272 19.2398 14.464C19.3198 14.64 19.4798 14.76 19.7198 14.824C19.9758 14.888 20.4078 14.92 21.0158 14.92C22.3598 14.92 23.3118 14.856 23.8718 14.728C24.4478 14.6 24.8558 14.344 25.0958 13.96C25.3358 13.576 25.5198 12.92 25.6478 11.992L26.7038 11.872L26.7758 11.992ZM33.4435 16.288C32.7715 16.288 32.1555 16.224 31.5955 16.096C31.0355 15.984 30.5715 15.856 30.2035 15.712C29.8515 15.568 29.6755 15.488 29.6755 15.472L29.5555 15.232C29.5715 15.136 29.6035 14.896 29.6515 14.512C29.6995 14.128 29.7395 13.632 29.7715 13.024C29.8195 12.4 29.8435 11.744 29.8435 11.056L30.9235 10.936C30.9235 12.136 31.0035 13.024 31.1635 13.6C31.3235 14.176 31.6195 14.576 32.0515 14.8C32.4835 15.008 33.1475 15.112 34.0435 15.112C35.0515 15.112 35.8595 14.88 36.4675 14.416C37.0755 13.936 37.3795 13.288 37.3795 12.472C37.3795 11.992 37.2115 11.56 36.8755 11.176C36.5555 10.792 36.1715 10.464 35.7235 10.192C35.2755 9.92 34.6115 9.552 33.7315 9.088C32.8995 8.656 32.2195 8.264 31.6915 7.912C31.1635 7.544 30.7155 7.112 30.3475 6.616C29.9955 6.12 29.8195 5.544 29.8195 4.888C29.8195 4.056 30.0595 3.304 30.5395 2.632C31.0355 1.944 31.6995 1.408 32.5315 1.024C33.3795 0.623999 34.3155 0.423999 35.3395 0.423999C35.9795 0.423999 36.5715 0.471999 37.1155 0.568C37.6595 0.648 38.0915 0.736 38.4115 0.831999C38.7315 0.927999 38.9315 0.991999 39.0115 1.024L39.0835 1.168C39.0675 1.264 39.0275 1.488 38.9635 1.84C38.8995 2.192 38.8275 2.68 38.7475 3.304C38.6675 3.928 38.6035 4.568 38.5555 5.224L37.6195 5.32L37.4755 5.2C37.4915 5.136 37.5075 4.992 37.5235 4.768C37.5395 4.528 37.5475 4.256 37.5475 3.952C37.5475 3.104 37.3395 2.52 36.9235 2.2C36.5075 1.88 35.7635 1.72 34.6915 1.72C33.8115 1.72 33.0835 1.944 32.5075 2.392C31.9475 2.824 31.6675 3.368 31.6675 4.024C31.6675 4.664 31.9395 5.224 32.4835 5.704C33.0435 6.168 33.8595 6.68 34.9315 7.24C35.9715 7.768 36.7635 8.208 37.3075 8.56C37.8515 8.896 38.3315 9.32 38.7475 9.832C39.1635 10.344 39.3715 10.936 39.3715 11.608C39.3715 12.504 39.1155 13.312 38.6035 14.032C38.1075 14.736 37.4115 15.288 36.5155 15.688C35.6195 16.088 34.5955 16.288 33.4435 16.288ZM53.6821 11.992C53.4101 13.288 53.1941 14.632 53.0341 16.024L52.9141 16.168C49.5541 16.056 47.1301 16 45.6421 16C44.4581 16 43.3461 16.08 42.3061 16.24L42.4501 15.136C43.1701 15.04 43.6581 14.856 43.9141 14.584C44.1861 14.296 44.3221 13.808 44.3221 13.12L44.3461 3.04C44.3461 2.528 44.2821 2.184 44.1541 2.008C44.0421 1.832 43.8101 1.744 43.4581 1.744L42.6421 1.792L42.5941 1.696L42.7621 0.639999C44.3941 0.687999 45.5061 0.711999 46.0981 0.711999C48.0021 0.711999 49.4821 0.695999 50.5381 0.663999C51.5941 0.615999 52.5141 0.535999 53.2981 0.423999L53.3701 0.568C53.0821 1.832 52.8981 3.16 52.8181 4.552L51.6661 4.648L51.7141 3.616C51.7141 3.056 51.6421 2.672 51.4981 2.464C51.3541 2.24 51.0421 2.096 50.5621 2.032C50.0821 1.952 49.2421 1.912 48.0421 1.912C47.4821 1.912 47.0981 1.928 46.8901 1.96C46.6821 1.992 46.5461 2.072 46.4821 2.2C46.4181 2.312 46.3781 2.528 46.3621 2.848L46.1701 7.504L48.6421 7.528C49.2661 7.528 50.2421 7.44 51.5701 7.264L51.6661 7.384L51.3301 8.8C49.5541 8.752 48.4341 8.728 47.9701 8.728C47.4421 8.728 46.8261 8.784 46.1221 8.896L46.0261 13.48C46.0261 13.944 46.0661 14.272 46.1461 14.464C46.2261 14.64 46.3861 14.76 46.6261 14.824C46.8821 14.888 47.3141 14.92 47.9221 14.92C49.2661 14.92 50.2181 14.856 50.7781 14.728C51.3541 14.6 51.7621 14.344 52.0021 13.96C52.2421 13.576 52.4261 12.92 52.5541 11.992L53.6101 11.872L53.6821 11.992ZM67.3818 16.384C66.9818 16.384 66.5498 16.184 66.0858 15.784C65.6378 15.368 65.2218 14.808 64.8378 14.104L62.2698 9.448H60.2778L60.2058 13.024C60.2058 13.632 60.2458 14.072 60.3258 14.344C60.4058 14.6 60.5578 14.776 60.7818 14.872C61.0058 14.952 61.3898 14.992 61.9338 14.992L61.9818 15.088L61.7658 16.096C61.5738 16.08 61.1898 16.064 60.6138 16.048C60.0378 16.032 59.4378 16.024 58.8138 16.024C58.2538 16.024 57.7578 16.032 57.3258 16.048C56.8938 16.064 56.6058 16.08 56.4618 16.096L56.6777 15.016C57.1898 14.952 57.5738 14.864 57.8298 14.752C58.0858 14.64 58.2618 14.464 58.3578 14.224C58.4538 13.968 58.5018 13.6 58.5018 13.12L58.5258 3.04C58.5258 2.528 58.4618 2.184 58.3338 2.008C58.2218 1.832 57.9898 1.744 57.6378 1.744C57.4778 1.744 57.3178 1.752 57.1578 1.768C56.9978 1.784 56.8858 1.792 56.8218 1.792L56.7738 1.696L56.9418 0.639999C57.1338 0.655999 57.4938 0.671999 58.0218 0.688C58.5498 0.704 59.0778 0.711999 59.6058 0.711999C60.1498 0.711999 60.7178 0.704 61.3098 0.688C61.9178 0.655999 62.3338 0.631999 62.5578 0.615999C64.0458 0.615999 65.2218 0.951999 66.0858 1.624C66.9498 2.296 67.3818 3.216 67.3818 4.384C67.3818 5.344 67.0698 6.224 66.4458 7.024C65.8378 7.824 64.9738 8.48 63.8538 8.992L66.4938 13.168C66.9578 13.936 67.4058 14.472 67.8378 14.776C68.2858 15.064 68.8298 15.208 69.4698 15.208L69.5658 15.304L69.4218 16.12L67.3818 16.384ZM62.7978 8.344C62.7978 8.392 63.0378 8.288 63.5178 8.032C63.9978 7.776 64.4298 7.384 64.8138 6.856C65.1978 6.328 65.3898 5.648 65.3898 4.816C65.3898 2.704 63.9258 1.648 60.9978 1.648C60.8378 1.648 60.7258 1.688 60.6618 1.768C60.6138 1.832 60.5818 1.976 60.5658 2.2C60.4218 4.648 60.3418 6.616 60.3258 8.104L62.7978 8.344ZM75.2311 16.408C74.9911 15.608 74.4471 13.848 73.5991 11.128C72.7671 8.408 71.9271 5.744 71.0791 3.136C70.9351 2.672 70.6871 2.336 70.3351 2.128C69.9831 1.904 69.4951 1.784 68.8711 1.768L68.8231 1.672L68.9911 0.639999C69.1991 0.639999 69.5831 0.655999 70.1431 0.688C70.7191 0.704 71.2631 0.711999 71.7751 0.711999C72.3031 0.711999 72.9671 0.679999 73.7671 0.615999C74.5831 0.535999 75.1191 0.48 75.3751 0.448L75.4471 0.615999L75.3511 1.552C74.4871 1.616 73.9111 1.712 73.6231 1.84C73.3511 1.968 73.2151 2.208 73.2151 2.56C73.2151 2.88 73.6391 4.544 74.4871 7.552C75.3351 10.544 75.9191 12.584 76.2391 13.672H76.4551C79.1111 6.824 80.4391 3.144 80.4391 2.632C80.4391 2.296 80.3111 2.056 80.0551 1.912C79.7991 1.752 79.3751 1.672 78.7831 1.672H77.5351L77.4871 1.576L77.6311 0.543999C77.8391 0.559999 78.2951 0.592 78.9991 0.639999C79.7191 0.687999 80.4071 0.711999 81.0631 0.711999C81.6551 0.711999 82.1991 0.704 82.6951 0.688C83.2071 0.671999 83.5431 0.655999 83.7031 0.639999L83.5111 1.768C83.0151 1.784 82.6711 1.864 82.4791 2.008C82.2871 2.152 82.1031 2.456 81.9271 2.92L76.7671 15.88L75.2311 16.408ZM96.4555 11.992C96.1835 13.288 95.9675 14.632 95.8075 16.024L95.6875 16.168C92.3275 16.056 89.9035 16 88.4155 16C87.2315 16 86.1195 16.08 85.0795 16.24L85.2235 15.136C85.9435 15.04 86.4315 14.856 86.6875 14.584C86.9595 14.296 87.0955 13.808 87.0955 13.12L87.1195 3.04C87.1195 2.528 87.0555 2.184 86.9275 2.008C86.8155 1.832 86.5835 1.744 86.2315 1.744L85.4155 1.792L85.3675 1.696L85.5355 0.639999C87.1675 0.687999 88.2795 0.711999 88.8715 0.711999C90.7755 0.711999 92.2555 0.695999 93.3115 0.663999C94.3675 0.615999 95.2875 0.535999 96.0715 0.423999L96.1435 0.568C95.8555 1.832 95.6715 3.16 95.5915 4.552L94.4395 4.648L94.4875 3.616C94.4875 3.056 94.4155 2.672 94.2715 2.464C94.1275 2.24 93.8155 2.096 93.3355 2.032C92.8555 1.952 92.0155 1.912 90.8155 1.912C90.2555 1.912 89.8715 1.928 89.6635 1.96C89.4555 1.992 89.3195 2.072 89.2555 2.2C89.1915 2.312 89.1515 2.528 89.1355 2.848L88.9435 7.504L91.4155 7.528C92.0395 7.528 93.0155 7.44 94.3435 7.264L94.4395 7.384L94.1035 8.8C92.3275 8.752 91.2075 8.728 90.7435 8.728C90.2155 8.728 89.5995 8.784 88.8955 8.896L88.7995 13.48C88.7995 13.944 88.8395 14.272 88.9195 14.464C88.9995 14.64 89.1595 14.76 89.3995 14.824C89.6555 14.888 90.0875 14.92 90.6955 14.92C92.0395 14.92 92.9915 14.856 93.5515 14.728C94.1275 14.6 94.5355 14.344 94.7755 13.96C95.0155 13.576 95.1995 12.92 95.3275 11.992L96.3835 11.872L96.4555 11.992Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgReserve);\nexport default __webpack_public_path__ + \"static/media/RESERVE.7f71ecdc84efd6e328a202676fb5ef56.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport Creat from \"../../../../assets/icons/create.svg\";\nimport CREATE from \"../../../../assets/icons/NewPostcreate.svg\";\nimport { Modal } from \"@mui/material\";\nimport Dell from \"../../../../assets/icons/Dell.svg\";\nimport MyCalendar from \"../Calendar/MyCalendar\";\nimport Month from \"../../../../assets/icons/Month.svg\";\nimport Time from \"../Time/Time\";\nimport RESERVE from \"../../../../assets/icons/RESERVE.svg\";\n\nconst Reservation: React.FC = () => {\n  const [open, setOpen] = useState<boolean>(false);\n\n  const [isOnlineReservation, setIsOnlineReservation] = useState(true);\n  const [isOnSiteReservation, setIsOnSiteReservation] = useState(false);\n\n  const switchToOnlineReservation = () => {\n    setIsOnlineReservation(true);\n    setIsOnSiteReservation(false);\n  };\n\n  const switchToOnSiteReservation = () => {\n    setIsOnlineReservation(false);\n    setIsOnSiteReservation(true);\n  };\n\n  return (\n    <>\n      <div className=\" cursor-pointer\">\n        <button\n          className=\"flex w-[182px] h-[54px] ml-[65px] mt-[19px] bg-[#1473E6] rounded-[50px]\"\n          onClick={() => setOpen(true)}\n        >\n          <img\n            className=\"w-[24px] h-[24px] ml-[28px] mt-[14px]\"\n            src={Creat}\n            alt=\"Creat\"\n          />\n          <img\n            className=\"w-[83px] h-[25px] ml-[9px] mt-[15px]\"\n            src={CREATE}\n            alt=\"CREATE\"\n          />\n        </button>\n      </div>\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        BackdropProps={{\n          style: {\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n          },\n        }}\n      >\n        <div\n          className=\"fixed top-0 left-0 w-full h-full flex items-center justify-center\"\n          onClick={() => setOpen(false)}\n        >\n          <div\n            className=\"flex-col ml-[600px] mt-[190px] bg-white w-[620px] h-[706px]  border-blue-500 border-[3px] z-50 overflow-y-auto\"\n            onClick={(e) => e.stopPropagation()}\n            style={{ overflowY: \"auto\", maxHeight: \"70vh\" }}\n          >\n            <div className=\"flex flex-nowrap\">\n              <button\n                style={{ marginTop: \"39px\" }}\n                className={`ml-[29px] mt-6 mr-4 text-[18px] ${\n                  isOnlineReservation ? \"text-black\" : \"text-gray-400\"\n                } border-b-[3px] ${\n                  isOnlineReservation ? \"border-blue-500\" : \"border-gray-400\"\n                } w-[201px] font-bold`}\n                onClick={switchToOnlineReservation}\n              >\n                Online Reservation\n              </button>\n\n              <button\n                style={{ marginTop: \"39px\" }}\n                className={`ml-[-16px] mt-6 mr-4 text-[18px] ${\n                  !isOnlineReservation ? \"text-black\" : \"text-gray-400\"\n                } border-b-[3px] ${\n                  !isOnlineReservation ? \"border-blue-500\" : \"border-gray-400\"\n                } w-[201px] font-bold`}\n                onClick={switchToOnSiteReservation}\n              >\n                On-site Reservation\n              </button>\n\n              <img\n                className=\"w-[42px] h-[42px] ml-[88px] mt-[19px] cursor-pointer \"\n                src={Dell}\n                alt=\"Dell\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setOpen(false);\n                }}\n              />\n            </div>\n            <div className=\"flex flex-nowrap\">\n              <div className=\"ml-[48px] mt-[32px] text-[18px] font-bold\">\n                Full name\n              </div>\n              <div className=\"text-[18px] font-bold text-[#E43232] ml-[7px] mt-[32px]\">\n                *\n              </div>\n              <input className=\"w-[298px] h-[38px] ml-[92px] mt-[24px] rounded-[20px] border-[1px] border-gray-300\" />\n            </div>\n            <div className=\"flex flex-nowrap\">\n              <div className=\"ml-[48px] mt-[32px] text-[18px] font-bold\">\n                Phone number\n              </div>\n              <input className=\"w-[298px] h-[38px] ml-[65px] mt-[24px] rounded-[20px] border-[1px] border-gray-300\" />\n            </div>\n            <div className=\"flex flex-nowrap\">\n              <div className=\"ml-[48px] mt-[32px] text-[18px] font-bold\">\n                Email\n              </div>\n              <input className=\"w-[298px] h-[38px] ml-[145px] mt-[24px] rounded-[20px] border-[1px] border-gray-300\" />\n            </div>\n            <div className=\"flex flex-nowrap\">\n              <div className=\"ml-[48px] mt-[32px] text-[18px] font-bold\">\n                Branch\n              </div>\n              <div className=\"text-[18px] font-bold text-[#E43232] ml-[7px] mt-[32px]\">\n                *\n              </div>\n              <img\n                className=\"w-[333px] h-[20px] ml-[85px] mt-[19px] cursor-pointer \"\n                src={Month}\n                alt=\"Month\"\n              />\n            </div>\n            <div className=\"flex flex-nowrap\">\n              <div className=\"ml-[48px] mt-[32px] text-[18px] font-bold\">\n                Date\n              </div>\n              <div className=\"text-[18px] font-bold text-[#E43232] ml-[7px] mt-[32px]\">\n                *\n              </div>\n              <MyCalendar\n                customClassName=\"flex justify-center w-[173px] h-[45px] ml-[150px] mt-[19px] border-[1px] rounded-[20px] border-[#E0E0E0] bg-[#E0E0E0]\"\n                dateTextClassName=\"ml-[5px] mt-[9px] \"\n                calendarImageClassName=\"ml-[-15px] mt-[9px]\"\n                dateFormat=\"eee dd MMMM\"\n              />\n            </div>\n            <div className=\"flex flex-nowrap\">\n              <div className=\"ml-[48px] mt-[32px] text-[18px] font-bold\">\n                Time\n              </div>\n              <div className=\"text-[18px] font-bold text-[#E43232] ml-[7px] mt-[32px]\">\n                *\n              </div>\n              <div className=\"w-[298px] h-[38px] rounded-[20px] border-[1px] border-gray-300 ml-[134px] mt-[32px]\">\n                <Time />\n              </div>\n            </div>\n            <div className=\"flex\">\n              <div className=\"ml-[48px] mt-[32px] text-[18px] font-bold\">\n                people\n              </div>\n              <div className=\"text-[18px] font-bold text-[#E43232] ml-[7px] mt-[32px]\">\n                *\n              </div>\n              <input className=\"w-[298px] h-[38px] ml-[120px] mt-[24px] rounded-[20px] border-[1px] border-gray-300\" />\n            </div>\n            <div className=\"flex\">\n              <div className=\"flex ml-[48px] mt-[32px] text-[18px] font-bold\">\n                Note\n              </div>\n              <input className=\"w-[298px] h-[61px] ml-[153px] mt-[12px] rounded-[20px] border-[1px] border-gray-300\" />\n            </div>\n            <div className=\"flex flex-nowrap\">\n              <div className=\"ml-[57px] mt-[12px]\">\n                <input\n                  type=\"checkbox\"\n                  className=\"w-[18px] h-[18px] border-[5px] border-[#000]\"\n                />\n              </div>\n              <div className=\"ml-[40px] mt-[5px]\">\n                <span className=\"text-[18px]\" style={{ whiteSpace: \"nowrap\" }}>\n                  Vaccine green passes\n                </span>\n              </div>\n            </div>\n            <button\n              className=\"w-[297px] h-[47px] ml-[164px] mt-[52px] mb-[33px] bg-[#1473E6] rounded-[50px]\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setOpen(false);\n              }}\n            >\n              <img\n                className=\"w-[100px] h-[42px] ml-[96px] mt-[5px] cursor-pointer \"\n                src={RESERVE}\n                alt=\"RESERVE\"\n              />\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default Reservation;\n","import React, { FC } from \"react\";\nimport MyCalendar from \"./components/Calendar/MyCalendar\";\nimport Seat from \"./components/Seat/Seat\";\nimport User24 from \"../../assets/icons/User24.svg\";\nimport Reservation from \"./components/Reservation/Reservation\";\n\nconst DashboardPage: FC<{}> = () => {\n  const numberOfSeats = 0;\n\n  return (\n    <div className=\"flex\">\n      <MyCalendar customClassName=\"w-[209px] h-[52px] ml-[24px] mt-[20px] border-[1px] border-[#E0E0E0] bg-[#E0E0E0] rounded-[5px]\" />\n      <div className=\"flex-col ml-[259px] mt-[9px] bg-[#F5CEFF] w-[177px] h-[73px] rounded-md\">\n        <Seat numberOfSeats={numberOfSeats} />\n        <div className=\"flex\">\n          <div className=\"flex ml-[12px] mt-[7px] text-[18px] whitespace-nowrap\">\n            Available seat\n          </div>\n          <img\n            className=\"w-[24px] h-[24px] ml-[10px] mt-[7px]\"\n            src={User24}\n            alt=\"User24\"\n          />\n        </div>\n      </div>\n      <Reservation />\n    </div>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["_ref","customClassName","dateTextClassName","calendarImageClassName","dateFormat","currentDate","setCurrentDate","useState","Date","open","setOpen","formattedDate","format","locale","enLocale","_jsxs","_Fragment","children","_jsx","className","onClick","src","calendar","alt","style","fontWeight","whiteSpace","Modal","onClose","BackdropProps","backgroundColor","LocalizationProvider","dateAdapter","AdapterDayjs","DateCalendar","onChange","e","$d","numberOfSeats","TimePicker","startHour","setStartHour","startMinute","setStartMinute","endHour","setEndHour","endMinute","setEndMinute","ampm","setAmPm","type","placeholder","value","target","marginRight","Reservation","isOnlineReservation","setIsOnlineReservation","isOnSiteReservation","setIsOnSiteReservation","Creat","CREATE","stopPropagation","overflowY","maxHeight","marginTop","switchToOnlineReservation","switchToOnSiteReservation","Dell","Month","MyCalendar","Time","RESERVE","DashboardPage","Seat","User24"],"sourceRoot":""}